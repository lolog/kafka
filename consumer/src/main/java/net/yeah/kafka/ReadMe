1. 每个线程一个消费者
	每个线程自己的消费者实例。这里是这种方法的优点和缺点：
	PRO: 这是最容易实现的
	PRO: 因为它不需要在线程之间协调，所以通常它是最快的。
	PRO: 它按顺序处理每个分区（每个线程只处理它接受的消息）。
	CON: 更多的消费者意味着更多的TCP连接到集群（每个线程一个）。一般kafka处理连接非常的快，所以这是一个小成本。
	CON: 更多的消费者意味着更多的请求被发送到服务器，但稍微较少的数据批次可能导致I/O吞吐量的一些下降。
	CON: 所有进程中的线程总数受到分区总数的限制。
2. 解耦消费和处理
	由一个或多个消费者线程消费数据，其消费的数据由处理器线程处理，优缺点：
	PRO: 可扩展消费者和处理进程的数量。这样单个消费者的数据可分给多个处理器线程来执行，避免对分区的任何限制。
	CON: 跨多个处理器的顺序保证需要特别注意，因为线程是独立的执行，后来的消息可能比遭到的消息先处理，这仅仅是因为线程执行的运气。如果对排序没有问题，这就不是个问题。
	CON: 手动提交变得更困难，因为它需要协调所有的线程以确保处理对该分区的处理完成。